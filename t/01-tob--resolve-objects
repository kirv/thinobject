#!/bin/sh

d=/tmp/tob-test1
test -d $d && {
    echo test directory $d exists, must be manually deleted
    exit 1
    }
mkdir $d &&
    cd $d ||
        exit 2

## arrange to delete test directory on any exit:
trap "rm -r $d" 0 1 2 3 13 15

class=/usr/local/lib/tob/Object

function create_object () {
    local ob=$1
    local link=$2
    mkdir $ob
    ln -s $class $ob/$link
    }

# create an object:
create_object foo ^
test $(tob foo.path|tail -n 1) == ./foo || exit 1
rm -r foo

# create a dotted object:
create_object .foo ^
test $(tob foo.path|tail -n 1) == ./.foo || exit 1
rm -r .foo

# create a symlinked object:
create_object link-foo ^
ln -s link-foo lfoo
test $(tob lfoo.path|tail -n 1) == ./lfoo || exit 1

# rename symlink to object:
mv lfoo .lfoo
test $(tob lfoo.path|tail -n 1) == ./.lfoo || exit 1

# create an object beneath some directories:
mkdir -p a/b/c/foo && 
    ln -s $class a/b/c/foo/^
test $(tob a/b/c/foo.path|tail -n 1) == ./a/b/c/foo || exit 1
rm -r a

# create a dotted object beneath some directories:
mkdir -p x/y/z/.foo && 
    ln -s $class x/y/z/.foo/^
test $(tob x/y/z/foo.path|tail -n 1) == ./x/y/z/.foo || exit 1
rm -r x

# create an object inside another object
mkdir -p a/b/pfoo/foo &&
    ln -s $class a/b/pfoo/^ &&
    ln -s $class a/b/pfoo/foo/.^
test $(tob a/b/pfoo.foo.path|tail -n 1) == ./a/b/pfoo/foo || exit 1
rm -r a

# repeat with dot-objects
mkdir -p a/b/.pfoo/.foo &&
    ln -s $class a/b/.pfoo/^ &&
    ln -s $class a/b/.pfoo/.foo/.^
test $(tob a/b/pfoo.foo.path|tail -n 1) == ./a/b/.pfoo/.foo || exit 1
rm -r a

# create an 'image file' object inside another like object
mkdir -p a/b/pfoo.jpg/foo.jpg &&
    ln -s $class a/b/pfoo.jpg/^ &&
    ln -s $class a/b/pfoo.jpg/foo.jpg/.^
test $(tob a/b/pfoo.jpg.foo.jpg.path|tail -n 1) == ./a/b/pfoo.jpg/foo.jpg || exit 1
rm -r a
