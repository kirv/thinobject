exit
NAME
    tob -- parse and resolve object.method, exec method in object directory

SYNOPSIS
    tob [OPTIONS] object.method [METHOD_OPTIONS] [ARGUMENTS]

DESCRIPTION
    Thinobject aims to achieve object oriented programming and data management
    directly on the filesystem, in a language-independent way.  Methods are
    executable programs, written in any language, and found in a type directory
    resolved symbolically.

    A symlink named ^ identifies the 'type' or 'prototype' of the directory
    object it is found in.  A 'type link' must not resolve directly in the
    filesystem, but rather must exist under a path listed in the TOBLIB
    environment variable.  If the ^ symlink points to an existing directory,
    then it is a 'prototype link'.

    Type links, resolving only under TOBLIB, can contain methods (executable
    programs or scripts) and attributes (arbitrary files).  Prototype links,
    resolving in the filesystem, cannot contain methods, but can contain
    arbitrary attributes.

EXIT VALUE
    Exit value should be 0 if no error occurred, but should have a value from
    101 to 123 if there was an error.  The numbers are assigned sequentially in
    the tob script, and for now that's the only documentation for what specific
    values mean.

OPTIONS
    -h
    --help
    show this help screen (manpage)

OBJECT CREATION
    Create a directory and within it a symlink named ^ to contain the object's
    type or prototype.  E.g.,

        mkdir foo; ln -s Directory foo/^    ## foo is of type Directory
        mkdir bar; ln -s ../foo bar/^       ## bar is of prototype foo

PROPERTIES
    The thinobject system uses ordinary files and directories in the filesystem,
    so the content of an object is arbitrary.  It may be convenient/helpful to
    think of the contents of an object as its ``properties'', if only to
    distinguish them from otherwise ordinary files (which they really are).

    Special meaning is applied to certain files, as follows:

    ^
    symlink to the parent type

    ^foo
    symlink to a mixin type

SEARCH PATHS
    tob prepares a search path for methods and one for attributes.  These differ
    mainly in that methods are not resolved in the object, while attributes may
    be.

    Mixin types are searched before the parent type, in lexical order.  Common
    ancestor types are searched last.

EXPORTED VARIABLES
    TOB_query                   -- the full query, OBJECT.METHOD
    TOB_object                  -- the object name as passed to the thinob enabler
    TOB_method                  -- the invoked method
    TOB_type                    -- the nominal type name
    TOB_types                   -- all types
    TOB_search_paths            -- search paths for object attributes
    TOB_method_paths            -- search paths for object methods
    TOB_caller_path             -- PWD for process that called tob

EXPORTED FUNCTIONS

ENVIRONMENT VARIABLES
    A few variables are checked for:
        QUIET -- suppress output from warn() if set

SEE ALSO
    Ideally, each thinobject type will provide a help method, and a
    --help option to each of its methods.

BUGS
    This is an experimental system.

AUTHOR
    Ken.Irving@alaska.edu (c) 2007-2021
