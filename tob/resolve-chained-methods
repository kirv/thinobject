resolve_chained_methods () {
    methods=(${1//./ })
    test ${#methods[*]} -gt 1 || return 1
    local m wantdirective=
    for m in ${methods[*]}; do
        test -n "$wantdirective" && {
            wantdirective=
            case $m in
                FORK|WAIT|AND|OR|PIPE)
                    directive+=($m)
                    continue;;
                *)  directive+=(WAIT);;
            esac
            }
        ## fail if method does not resolve:
        resolve_method_path $m ||
            error -x 131 "chained method $m did not resolve"
        chain+=($m)
        chainpath+=($TOB_method_path)
        wantdirective=1
    done
    test -n "$wantdirective" && directive+=(WAIT)
    return 0
    }
