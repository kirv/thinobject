#!/bin/bash

## gather all the web page elements from object and classes in arrays:

declare -a html_css html_javascript html_body

for path in ${TOB_search_paths//:/ }; do
    test -e "$path/@html-css" && 
        html_css+=("$path/@html-css")

    test -e "$path/@html-javascript" && 
        html_javascript+=("$path/@html-javascript")

    test -e "$path/@html-body" && 
        html_body+=("$path/@html-body")
done

## also check for the xml "hook" method:
declare xml=
# TOB_resolve_method_path xml && xml=$TOB_method_path
for path in ${TOB_method_paths//:/ }; do
    test -x $path/xml || continue
    xml=$path/$method
    break
done

## begin output of the web page...

echo '<html>'
echo '<head>'
echo '<title>'

## use object name for the title unless @html-title exists:

if test -e @html-title; then
    cat @html-title
else
    echo $TOB_object
fi

echo '</title>'

## output css (if any)
n=${#html_css[@]}
while (( n > 0 )); do
    n+=-1
    printf '<style type="text/css">\n%s</style>\n' \
        "$(<${html_css[n]})"
done

## output javascript (if any)
n=${#html_javascript[@]}
while (( n > 0 )); do
    n+=-1
    printf '<script> language="javascript"\n%s</script>\n' \
        $(<${html_javascript[n]})
done

echo '</head>'
echo '<body>'

## run xml method if defined and if anything has changed...
test -n "$xml" && {
    if [ -e \@html-body ]; then
        for f in *; do
            test $f -nt \@html-body && UPDATE_HTML_BODY=1
        done
    else
        ## @html-body file does not exist, so create it
        ## NOTE: must be done as a logon user, not via web server
        UPDATE_HTML_BODY=1
        touch \@html-body
        chmod og+w \@html-body
    fi

    test "$UPDATE_HTML_BODY" == "1" && {
        printf '<div id="%s">' $TOB_object_path > @html-body
        $xml >> @html-body
        echo '</div>' >> @html-body
        }
        
    }

## now output the html page body, perhaps just the object name

if test -z "$html_body"; then
    echo $TOB_object
else
    n=${#html_body[@]}
    while (( n > 0 )); do
        n+=-1
        printf "%s" $(<${html_body[n]})
    done
fi

echo '</body>'
echo '</html>'

