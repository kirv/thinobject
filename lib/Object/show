#!/bin/bash

error() { printf "%s %s\n" ${0##*/} "$@"; exit 1; }

output() {
    printf "%s%s%s" "$1" "$delim" "$2"
    test -n "$3" && 
        printf "%s%s" "$delim" "$3"
    printf "\n"
    }

: ${delim:=$'\011'}

while test -n "$1" -a "${1:0:1}" = -; do
    case $1 in
        --all)  export show_hidden=1;;
        --self) output . ${TOB_type%%:*};;
        --size) export show_size=1;;
        --delim) export delim=$2; shift;;
        *)      error "unknown option: $1";;
    esac
    shift
done

test -n "$1" || {
    test -n "$show_hidden" && exec $0 .* *
    exec $0 *
    }

for f in "$@"; do 

    case ${f:0:1} in
        .)  test "$show_hidden" || continue
            test $f = . && continue
            c=1;;
        *)  c=0;;
    esac

    # check for @ % ^ ..
    case ${f:$c:1} in
        @)  if test -n "$show_size"; then
                 output ${f:$c+1} list "$(wc -l < $f)"
            else
                 output ${f:$c+1} list
            fi
            continue;;
      # @)  output ${f:$c+1} list; continue;;
        %)  output ${f:$c+1} dict; continue;;
        :)  output ${f:$c+1} json; continue;;
        ^)  test "${f:$c+1}" = "" && continue
            m="$(readlink $f)"
            if test -L "$m"; then
                if test -d "$m"; then
                    output $f prototype $m
                elif test ! -e "$m"; then
                    output $f mixin $m
                else
                    output $f bad-mixin-link $m
                fi
            else
                output $f bad-mixin-file $m
            fi
            continue;;
        ^)  test "${f:$c+1}" = "" && continue
            m="$(readlink $f)"
            output TESTING MIXIN $f '->' $m
            if test -L "$m"; then
                if test -d "$m"; then
                    output $f prototype $m
                elif test ! -e "$m"; then
                    output $f mixin $m
                else
                    output $f bad-mixin-link $m
                fi
            else
                output $f bad-mixin-file $m
            fi
            continue;;
        .)  test "${f:$c+1:1}" = "" && continue;;
    esac

    # check for symvar:
    test -e $f || {
        test -L $f || { output $f nonfile; continue; }
        v=$(readlink $f)
        test "${v:0:1}" = = || { output $f type "$v"; continue; }
        output $f symvar "${v:1}"
        continue
        }

    test ! ${f#*=} = $f && output $f attr && continue

    # check for object:
    type=($(tob $f.type 2>/dev/null)) && output $f ${type%%:*} && continue

    if test -f $f; then
        output $f file
    elif test -d $f; then
        output $f dir
    else
        output $f unknown
    fi
done
