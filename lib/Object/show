#!/bin/bash

error() { printf "%s %s\n" ${0##*/} "$@"; exit 1; }

while test -n "$1" -a "${1:0:1}" = -; do
    case $1 in
        --all)  export show_hidden=1;;
        --self) echo . ${TOB_type%%:*};;
        *)      error "unknown option: $1";;
    esac
    shift
done

test -n "$1" || {
    test -n "$show_hidden" && exec $0 .* *
    exec $0 *
    }

for f in "$@"; do 

    case ${f:0:1} in
        .)  test "$show_hidden" || continue
            test $f = . && continue
            c=1;;
        *)  c=0;;
    esac

    # check for @ % ^ ..
    case ${f:$c:1} in
        @)  echo ${f:$c+1} list; continue;;
        %)  echo ${f:$c+1} dict; continue;;
        :)  echo ${f:$c+1} json; continue;;
        ^)  test "${f:$c+1}" = "" && continue
            m="$(readlink $f)"
            echo TESTING MIXIN $f '->' $m
            if test -L "$m"; then
                if test -d "$m"; then
                    echo $f prototype $m
                elif test ! -e "$m"; then
                    echo $f mixin $m
                else
                    echo $f bad-mixin-link $m
                fi
            else
                echo $f bad-mixin-file $m
            fi
            continue;;
        ^)  test "${f:$c+1}" = "" && continue
            m="$(readlink $f)"
            echo TESTING MIXIN $f '->' $m
            if test -L "$m"; then
                if test -d "$m"; then
                    echo $f prototype $m
                elif test ! -e "$m"; then
                    echo $f mixin $m
                else
                    echo $f bad-mixin-link $m
                fi
            else
                echo $f bad-mixin-file $m
            fi
            continue;;
        .)  test "${f:$c+1:1}" = "" && continue;;
    esac

    # check for symvar:
    test -e $f || {
        test -L $f || { echo $f nonfile; continue; }
        v=$(readlink $f)
        test "${v:0:1}" = = || { echo $f badlink; continue; }
        echo $f symvar = "${v:1}"
        continue
        }

    test ! ${f#*=} = $f && echo $f attr && continue

    # check for object:
    type=($(tob $f.type 2>/dev/null)) && echo $f ${type%%:*} && continue

    if test -f $f; then
        echo $f file
    elif test -d $f; then
        echo $f dir
    else
        echo $f unknown
    fi
done
