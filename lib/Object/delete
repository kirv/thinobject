#!/bin/sh
ob=$1 && shift

## if no arguments, delete the thinobject completely with rm -r:
test -z "$*" && { 

    ## delete symlink to object, not the object!
    test -L $tob_object && { 
        test "$VERBOSE" && echo deleting symlink: $tob_object
        /bin/rm $tob_object ||
            tob_error -v -x $? failed to delete $tob_object
        exit
        }

    ## the object and all contents will be deleted
    ## ... but first make sure it's a directory:
    test -d $tob_path || {
        tob_error -v -x 1 error??: $tob_path is not a directory
        }

    ## ... and that it has a class symlink ^ 
    test -L $tob_path/^ ||
        test -L $tob_path/.^ ||
            tob_error -v -x 1 error?: $tob_object class symlink not found

    ## ... then go ahead and delete it:
    /bin/rm -r $tob_path ||
        tob_error -v -x $? failed to delete $tob_path directory

    test "$VERBOSE" && echo object directory $tob_path was deleted

    ## exit if there's nothing left:
    test -e $tob_object || exit 0  ## success!

    ## ASSERT: the nominal (former) object remains if it was shadowed

    ## for now just print a warning, consider providing option to delete it
    tob_error "nominal object $tob_object (no longer a thinobject) remains"

    exit 0
    }

## ASSERT: arguments are given, representing object properties to delete
for f in $*; do

    property=$tob_path/$f

    test -e $property || { # no such property
        test "$VERBOSE" && echo no property: $property
        tob_error no property: $property
        continue
        }

    ## ASSERT: property exists, should be a symlink, file, or directory

    test -L $property && { # symlink
        test "$VERBOSE" && echo deleting symlink property $property
        /bin/rm $property ||
            tob_error -x $? failed to delete symlink $property
        continue
        }

    test -f $property && { # file
        test "$VERBOSE" && echo deleting file property $property
        /bin/rm $property ||
            tob_error -x $? failed to delete file $property
        continue
        }

    test -d $property && { # directory
        test "$VERBOSE" && echo deleting directory property $property
        /bin/rm -r $property ||
            tob_error -x $? failed to delete directory $property
        continue
        }

    ## can't happen, but handle it if it does...
    tob_error -x 1 -v failed to delete property $property

done

exit 0
