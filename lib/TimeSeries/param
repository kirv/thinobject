#!/usr/bin/perl -w
use strict;
use warnings;

use ThinObject;

use LockFile::Simple;
use Getopt::Long;

my $ob = ThinObject->new( shift );

my %param;
foreach ( $ob->param() ) {
    $param{$_} = undef;
    }

unless ( @ARGV ) {
    print "$_ = ", $ob->param($_), "\n" foreach keys %param;
  # print "$_ = ", $ob->param($_), "\n" foreach $ob->param();
  # foreach my $key ( $ob->param() ) {
  #     print $key, ' = ', $ob->param($key), "\n";
  #     }
    }

## ASSERT: at least one parameter has been passed

while ( my $arg = shift ) {
    if ( my ($tag, $val) = $arg =~ m/(\S*)=(.*)/ ) {
        print "WANT TO SET: $tag = $val\n";
        next;
        }
    ## ASSERT: at least one parameter has been passed
  # my $value = $ob->param($arg) || 'NOT DEFINED';
    unless ( exists $param{$arg} ) {
        warn "parameter $arg is not defined\n";
        next;
        }
    my $value = $ob->param($arg);
    print "$arg = $value\n";
    }
