#/bin/bash

warn() { printf "%s\n" "$@" >&2; }
error() { warn "$@"; exit 1; }

main() {
    method=$1 && shift
    test -x "$method" || exit
    # use method name as 'namespace prefix', try to resolve using it first
    ns=${method##*/}
    declare -A seen

  # warn "Method.exec $method $*"
    
    for arg in "$@"; do
        case $arg in

        @?*) 
            # @name -- fail operation if symvar name is not resolved
          # warn "LOOKING FOR ATTR $ns-${arg:1} or ${arg:1}"
            TOB_get_symvar $ns-${arg:1} ||
                TOB_get_symvar ${arg:1} ||
                    error "symvar in $arg not expanded"
            args+=("$value")
            ;;

        --*=@?*)
            # --option=@name -- skip if symvar name is not resolved
            option=${arg%%=*}
            test -n "${seen[$option]}" && continue
            name=${arg##=@*}
          # warn "LOOKING FOR ATTR $ns-$name or $name"
            TOB_get_symvar $ns-$name || TOB_get_symvar $name || continue
            args+=(--$option="$value")
            ;;

        -*=@?*)
            # -option=@name -- skip if symvar name is not resolved
            option=${arg%%=*}
            test -n "${seen[$option]}" && continue
            name=${arg##=@*}
          # warn "LOOKING FOR ATTR $ns-$name or $name"
            TOB_get_symvar $ns-$name || TOB_get_symvar $name || continue
            args+=($option="$value")
            ;;

        --*=@)
            # --option=@ -- treat the same as --option=@option
          # warn "DEBUG arg=$arg"
            option=${arg%=@}
          # warn "DEBUG option=$option"
          # printf "ALL OPTIONS: ${!seen[*]}\n"
            test -n "${seen[$option]}" && continue
            option=${option#--}
          # warn "LOOKING FOR ATTR $ns-$option or $option"
            TOB_get_symvar $ns-$option ||
                TOB_get_symvar $option ||
                    continue
            args+=(--$option=$value)
            ;;

        -*=@)
            # -option=@ -- treat the same as -option=@option
            option=${arg%=@}
            test -n "${seen[$option]}" && continue
            option=${option#-}
          # warn "LOOKING FOR ATTR $ns-$option or $option"
            TOB_get_symvar $ns-$option ||
                TOB_get_symvar $option ||
                    continue
            args+=(-$option=$value)
            ;;

        *)  # pass-through other arguments
            args+=("$arg")
            test ${arg:0:1} = - && {
                # register option as seen:
                option=${arg%%=*}
                seen[$option]=1
                }
            ;;

        esac
    done

  # warn "EXEC $method ${args[*]}"
    exec $method "${args[@]}"

    }

main "$@"

